{"version":3,"sources":["routes/DetailsPage/DetailsPage.js","components/SearchInput/SearchInputUtils.js","redux/actions/index.js","services/searchService.js","components/SearchInput/SearchInput.js","components/Pagination/Pagination.js","components/SearchResult/SearchResults.js","routes/SearchPage/SearchPage.js","App/App.js","reportWebVitals.js","redux/reducers/resultsReducer.js","redux/reducers/index.js","index.js","services/persistServices.js"],"names":["DetailsPage","match","useState","repoDetails","setRepoDetails","repos","useSelector","state","results","items","id","params","repo","find","item","parseInt","useEffect","className","to","name","language","src","owner","avatar_url","alt","login","stargazers_count","description","languageOptions","value","label","sortOptions","retriveResults","type","payload","getResults","sortBy","a","fetch","res","ok","json","then","e","Promise","reject","SearchInput","repoName","setRepoName","setLanguage","setSortBy","error","setError","disptach","useDispatch","submitForm","event","preventDefault","replace","onSubmit","onChange","target","placeholder","required","htmlFor","defaultValue","options","sortType","Pagination","reposPerPage","totalRepos","paginate","currentPage","pageNumbers","i","Math","ceil","push","map","number","onClick","SearchResults","setCurrentPage","indexOfLastRepo","indexOfFirstRepo","length","currentRepos","slice","pageNumber","SearchPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resultsReducer","action","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1f44cb5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AiFillStar } from 'react-icons/ai';\nimport './DetailsPage.css';\n\nfunction DetailsPage({match}) {\n    const [repoDetails, setRepoDetails] = useState(null);\n    const repos = useSelector(state => state.results.items);\n    const {id} = match.params;\n    const repo = repos.find(item => item.id === parseInt(id));\n    \n    useEffect(() => {\n        setRepoDetails(repo);\n    }, [repo])\n\n    return (\n        <div className=\"details-page\">\n            <Link className=\"back-link\" to='/'>Back</Link>\n            <div className=\"repo-details\">\n                {repoDetails && \n                <div key={repoDetails.id}>\n                    <h2>{repoDetails.name}</h2>\n                    <p>{repoDetails.language}</p>\n                    <img \n                    src={repo.owner.avatar_url}\n                    alt={`${repo.owner.login}`}\n                    />\n                    <h3>Owner: {repo.owner.login}</h3>\n                    <p className=\"star-container\">\n                     <AiFillStar className=\"star\" /> {repo.stargazers_count}\n                    </p>\n                    <p className=\"repo-desc\">{repo.description}</p>\n                </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default DetailsPage;","export const languageOptions = [\n    {value: \"\" , label: \"All\"},\n    {value: \"+language:assembly\" , label: \"Assembly\"},\n    {value: \"+language:c\" , label: \"C\"},\n    {value: \"+language:c#\" , label: \"C#\"},\n    {value: \"+language:c++\" , label: \"C++\"},\n    {value: \"+language:go\" , label: \"Go\"},\n    {value: \"+language:haskell\" , label: \"Haskell\"},\n    {value: \"+language:html\" , label: \"HTML\"},\n    {value: \"+language:java\" , label: \"Java\"},\n    {value: \"+language:javascript\" , label: \"Javascript\"},\n    {value: \"+language:php\" , label: \"PHP\"},\n    {value: \"+language:python\" , label: \"Python\"},\n    {value: \"+language:ruby\" , label: \"Ruby\"},\n    {value: \"+language:rust\" , label: \"Rust\"},\n    {value: \"+language:scala\" , label: \"Scala\"},\n    {value: \"+language:swift\" , label: \"Swift\"},\n];\n\nexport const sortOptions = [\n    {value: \"\" , label: \"Best Match (Default)\"},\n    {value: \"&sort=stars\" , label: \"Stars\"}\n];\n","export const retriveResults = (results) => {\n    return{\n        type: 'GET_RESULTS',\n        payload: results\n    };\n};","const getResults = async(name,language,sortBy) => {\n    const res = await fetch('https://api.github.com/search/repositories?q=' + name + language + sortBy);\n    return await ((!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json());\n}\n\nexport default getResults;","import React, { useState } from 'react';\nimport Select from 'react-select';\nimport { languageOptions, sortOptions } from './SearchInputUtils';\nimport { useDispatch } from 'react-redux';\nimport { retriveResults } from '../../redux/actions';\nimport getResults from '../../services/searchService';\nimport './SearchInput.css';\n\nfunction SearchInput() {\n    const [repoName, setRepoName] = useState(\"\");\n    const [language, setLanguage] = useState(\"\");\n    const [sortBy, setSortBy] = useState(\"\");\n    const [error, setError] = useState(null);\n    const disptach = useDispatch();\n    const submitForm = async (event) => {\n        event.preventDefault();\n        // Replaces all spaces with a \"+\" symbol\n        const name = repoName.replace(/\\s/g, \"+\");\n\n        // Checks to see if there's atleast one character in the input field\n        if (name === \"\") {\n            setError(\"Please enter a valid name!\");\n        } else {\n            const results = await getResults(name, language, sortBy)\n            disptach(retriveResults(results));\n            setError(null);\n        }\n    };\n\n    return (\n        <div className=\"search-form\">\n            <form onSubmit={submitForm}>\n                <input\n                    className=\"search-input\"\n                    onChange={e => setRepoName(e.target.value)}\n                    placeholder={\"Enter Repo Name\"}\n                    type=\"text\"\n                    required\n                />\n                {error && <p className=\"error\">{error}</p>}\n                <div className=\"search-selectors\">\n                    <div className=\"select-box\">\n                        <label htmlFor=\"language\">Language</label>\n                        <Select\n                            id=\"language\"\n                            placeholder={\"All\"}\n                            defaultValue={language}\n                            onChange={language => setLanguage(language.value)}\n                            options={languageOptions}\n                        />\n                    </div>\n                    <div className=\"select-box\">\n                        <label htmlFor=\"sort-by\">Sort By</label>\n                        <Select\n                            id=\"sort-by\"\n                            placeholder={\"Best Match (Default)\"}\n                            defaultValue={sortBy}\n                            onChange={sortType => setSortBy(sortType.value)}\n                            options={sortOptions}\n                        />\n                    </div>\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchInput;","import React from 'react';\nimport './Pagination.css'\n\nfunction Pagination({ reposPerPage, totalRepos, paginate, currentPage }) {\n    const pageNumbers = [];\n\n    for(let i =1; i <= Math.ceil(totalRepos/ reposPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <ul className=\"paginator\">\n            {pageNumbers.map(number => (\n                <li \n                key={number} \n                className={ number === currentPage ? \"page-number-active\" : \"page-number\"}\n                >\n                    <p onClick={() => paginate(number)}>\n                        {number}\n                    </p> \n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default Pagination;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Pagination from '../Pagination/Pagination';\nimport './SearchResults.css';\n\nfunction SearchResults() {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [reposPerPage] = useState(5); \n    const indexOfLastRepo = currentPage * reposPerPage;\n    const indexOfFirstRepo = indexOfLastRepo - reposPerPage;\n    // Search results from the store \n    const results = useSelector(state => state.results);\n    // Total amount of repositories recieved from the search\n    const totalRepos = results ? results.items.length : null;\n    // Gets a set repositories based on the page number\n    const currentRepos = results ? results.items.slice(indexOfFirstRepo, indexOfLastRepo) : 0;\n    // Change page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    return (\n        <div>\n            {totalRepos === 0 && \n            <p className=\"no-repos\">Sorry, there are no repositories that matches this search.</p>\n            }\n            {totalRepos > 0 && <ul className=\"repo-list\" >\n                {currentRepos.map(repo => {\n                    return <li key={repo.id} className=\"repo-card\">\n                        <img \n                        src={repo.owner.avatar_url}\n                        alt={`${repo.owner.login}`}\n                        />\n                        <div className=\"repo-card-details\">\n                            <p>{repo.name}</p>\n                            <p>{repo.language}</p>\n                        </div>\n                        <Link className=\"repo-link\"\n                        to={`/details/${repo.id}`}\n                        >Details</Link>\n                    </li>\n                })}\n            </ul>}\n            <div className=\"center-paginator\">\n                <Pagination\n                currentPage={currentPage}\n                reposPerPage={reposPerPage} \n                totalRepos={totalRepos} \n                paginate={paginate}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResults;","import SearchInput from '../../components/SearchInput/SearchInput';\nimport SearchResults from '../../components/SearchResult/SearchResults';\nimport './SearchPage.css';\n\nfunction SearchPage() {\n\n    return (   \n            <div>\n                <h1 className=\"header\">Search for a repository</h1>\n                <SearchInput />\n                <SearchResults />\n            </div>\n    );\n}\n\nexport default SearchPage;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DetailsPage from '../routes/DetailsPage/DetailsPage';\nimport SearchPage from '../routes/SearchPage/SearchPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path={'/'}\n            component={SearchPage}\n          />\n          <Route \n            path={'/details/:id'}\n            component={DetailsPage}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const resultsReducer = (state = null, action) => {\n    switch(action.type){\n        case 'GET_RESULTS':\n         return action.payload;\n        default:\n        return state;   \n    }\n}\n\nexport default resultsReducer;","import resultsReducer from \"./resultsReducer\";\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    results: resultsReducer\n});\n\nexport default rootReducer;","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport { saveState, loadState } from './services/persistServices';\n\nconst persistedState = loadState();\nconst store = createStore(\n    rootReducer,\n    persistedState,\n    // This is a state management visualizer for the browser\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\n\n// Updates the local storage anytime the state changes\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// Saves state to the local storage \nexport const saveState = (state) => {\n    try {\n       const serializedState = JSON.stringify(state);\n       localStorage.setItem(\"state\", serializedState); \n    } catch (error) {\n        console.log(error);\n    }\n};\n\n// Loads saved state from the local storage\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (error) {\n        return undefined;\n    }\n};\n"],"sourceRoot":""}